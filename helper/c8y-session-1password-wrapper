#!/bin/zsh

# --- Safe Logging Setup ---
# Redirect this script's standard error to a log file for debugging.
# We use '>>' to append, which is safer. This does NOT affect stdout.
# Any 'echo' command or error from this script will go to this log.
exec 2>> /tmp/c8y_wrapper.log

# --- Debugging & Environment Setup ---
log_message() {
  # This function ensures our log messages go to stderr (and thus to our log file).
  echo "[$(date)] - $1" >&2
}

log_message "--- Wrapper Started ---"
log_message "Initial PATH: $PATH"

# Inside the wrapper, replace the 'if/elif' block with this:
if [ -f "$HOME/.config/nmh.env" ]; then
  log_message "Sourcing dedicated environment file"
  source "$HOME/.config/nmh.env"
fi

log_message "PATH after sourcing: $PATH"

# --- Execute the Target Application ---
# Use an absolute path to your application for maximum reliability.
APP_PATH="/usr/local/bin/c8y-session-1password"

if [ ! -f "$APP_PATH" ]; then
    log_message "ERROR: Application not found at $APP_PATH"
    exit 1
fi

log_message "Executing target application: $APP_PATH"

# The 'exec' command is CRUCIAL. It replaces this shell script process
# with the target application process. This means the application inherits
# the corrected environment we just set up, and its stdin/stdout are now
# connected directly to Chrome, which is exactly what we need.
exec "$APP_PATH"

# --- This line will never be reached ---
